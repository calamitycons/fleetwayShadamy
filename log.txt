Sun Jan  3 20:50:45 2021
Windows-10-10.0.18362
Ren'Py 7.4.0.1167
 

Bootstrap to the start of init.init took 0.12s
Early init took 0.00s
Loader init took 0.05s
Loading error handling took 0.06s
Loading script took 0.43s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.14s
Loading analysis data took 0.03s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.12s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.04s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.15s
Prepare screens took 0.18s
Save pyanalysis. took 0.00s
Save bytecode. took 0.09s
Running _start took 0.00s
Performance test:
Interface start took 0.21s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 2.57555413246s
Cleaning stores took 0.00s
Init translation took 0.00s
Build styles took 0.01s
Load screen analysis took 0.08s
Analyze screens took 0.00s
Prepare screens took 0.00s
Running _start took 0.00s
Resetting cache.
Bootstrap to the start of init.init took 140.18s
Early init took 0.00s
Loader init took 0.07s
Loading error handling took 0.03s
Loading script took 0.20s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.06s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.15s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.07s
Build styles took 0.00s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.11s
Prepare screens took 0.14s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.08s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 141.455388069s
Resetting cache.
Bootstrap to the start of init.init took 174.32s
Early init took 0.01s
Loader init took 0.09s
Loading error handling took 0.03s
Loading script took 0.37s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.09s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.17s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.10s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.09s
Prepare screens took 0.13s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 175.838792086s
Resetting cache.
Bootstrap to the start of init.init took 196.05s
Early init took 0.00s
Loader init took 0.10s
Loading error handling took 0.04s
Loading script took 0.26s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s

File "game/storyProgression/groovyTrainCafe.rpy", line 39: expected 'image_name_component' not found.
    show behind shadow injured at side_right with easeinright
        ^
DPI scale factor: 1.500000
Interface start took 0.17s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 196.803122044s
Resetting cache.
Bootstrap to the start of init.init took 206.82s
Early init took 0.00s
Loader init took 0.04s
Loading error handling took 0.02s
Loading script took 0.16s
Loading save slot metadata. took 0.04s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.14s
Loading analysis data took 0.03s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.16s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.05s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.12s
Build styles took 0.02s
Load screen analysis took 0.00s
Analyze screens took 0.04s
Save screen analysis took 0.12s
Prepare screens took 0.10s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.11s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 208.195376158s
Resetting cache.
Bootstrap to the start of init.init took 208.88s
Early init took 0.00s
Loader init took 0.08s
Loading error handling took 0.04s
Loading script took 0.29s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s

File "game/storyProgression/groovyTrainCafe.rpy", line 39: expected statement.
    behind shadow injured at side_right with easeinright
    ^
DPI scale factor: 1.500000
Interface start took 0.25s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 209.744065046s
Resetting cache.
Bootstrap to the start of init.init took 216.60s
Early init took 0.00s
Loader init took 0.05s
Loading error handling took 0.02s
Loading script took 0.19s
Loading save slot metadata. took 0.04s
Loading persistent took 0.00s

File "game/storyProgression/groovyTrainCafe.rpy", line 39: expected statement.
    behind show shadow injured at side_right with easeinright
    ^
DPI scale factor: 1.500000
Interface start took 0.20s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 217.266654015s
Resetting cache.
Bootstrap to the start of init.init took 222.78s
Early init took 0.00s
Loader init took 0.04s
Loading error handling took 0.02s
Loading script took 0.20s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Dump and make backups. took 0.08s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.09s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.10s
Build styles took 0.00s
Load screen analysis took 0.06s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.09s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.09s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 223.927896023s
Resetting cache.
Bootstrap to the start of init.init took 233.79s
Early init took 0.00s
Loader init took 0.08s
Loading error handling took 0.06s
Loading script took 0.24s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.13s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Dump and make backups. took 0.09s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.08s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.11s
Build styles took 0.01s
Load screen analysis took 0.07s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.00s
Running _start took 0.00s
Performance test:
Interface start took 0.06s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 235.096424103s
Resetting cache.
Bootstrap to the start of init.init took 448.58s
Early init took 0.00s
Loader init took 0.07s
Loading error handling took 0.04s
Loading script took 0.21s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.10s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.05s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.09s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.10s
Prepare screens took 0.14s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 449.848564148s
Resetting cache.
Bootstrap to the start of init.init took 515.81s
Early init took 0.00s
Loader init took 0.07s
Loading error handling took 0.04s
Loading script took 0.19s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.09s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.12s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.06s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.08s
Prepare screens took 0.13s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.11s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 517.097608089s
Resetting cache.
Bootstrap to the start of init.init took 564.77s
Early init took 0.00s
Loader init took 0.07s
Loading error handling took 0.03s
Loading script took 0.32s
Loading save slot metadata. took 0.02s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.11s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.08s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.11s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.08s
Prepare screens took 0.13s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.06s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 566.155511141s
Resetting cache.
Bootstrap to the start of init.init took 566.86s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.03s
Loading script took 0.25s
Loading save slot metadata. took 0.04s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.10s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.10s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.14s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.00s
Running _start took 0.00s
Performance test:
Interface start took 0.06s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 568.143262148s
Resetting cache.
Bootstrap to the start of init.init took 587.32s
Early init took 0.00s
Loader init took 0.08s
Loading error handling took 0.03s
Loading script took 0.19s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.09s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.09s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.09s
Prepare screens took 0.10s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.10s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 588.538174152s
Resetting cache.
Bootstrap to the start of init.init took 797.21s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.03s
Loading script took 0.19s
Loading save slot metadata. took 0.04s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.11s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.11s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.08s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.22s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.05s
Save screen analysis took 0.16s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.08s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 798.72273922s
Resetting cache.
Bootstrap to the start of init.init took 803.68s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.02s
Loading script took 0.18s
Loading save slot metadata. took 0.02s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.09s
Loading analysis data took 0.07s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.09s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.06s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.09s
Prepare screens took 0.11s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.06s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 804.859101057s
Cleaning stores took 0.00s
Init translation took 0.00s
Build styles took 0.00s
Load screen analysis took 0.05s
Analyze screens took 0.00s
Prepare screens took 0.00s
Running _start took 0.00s
Resetting cache.
Bootstrap to the start of init.init took 840.52s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.02s
Loading script took 0.18s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.10s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.00s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.11s
Prepare screens took 0.14s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 841.742080212s
Resetting cache.
Bootstrap to the start of init.init took 874.22s
Early init took 0.00s
Loader init took 0.07s
Loading error handling took 0.03s
Loading script took 0.20s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.09s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.06s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.00s
Load screen analysis took 0.00s
Analyze screens took 0.01s
Save screen analysis took 0.09s
Prepare screens took 0.13s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 875.419776201s
Resetting cache.
Bootstrap to the start of init.init took 879.00s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.02s
Loading script took 0.18s
Loading save slot metadata. took 0.04s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.13s
Loading analysis data took 0.06s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.12s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.07s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.09s
Prepare screens took 0.16s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.05s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 880.256866217s
Resetting cache.
Bootstrap to the start of init.init took 955.02s
Early init took 0.00s
Loader init took 0.08s
Loading error handling took 0.03s
Loading script took 0.21s
Loading save slot metadata. took 0.04s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.09s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.13s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.10s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.01s
Save screen analysis took 0.08s
Prepare screens took 0.11s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 956.291166067s
Resetting cache.
Bootstrap to the start of init.init took 959.81s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.03s
Loading script took 0.18s
Loading save slot metadata. took 0.02s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.10s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.08s
Build styles took 0.00s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.08s
Prepare screens took 0.09s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.09s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 960.97551012s
Resetting cache.
Bootstrap to the start of init.init took 972.28s
Early init took 0.00s
Loader init took 0.08s
Loading error handling took 0.04s
Loading script took 0.23s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.13s
Loading analysis data took 0.08s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.14s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.07s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.13s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.12s
Prepare screens took 0.13s
Save pyanalysis. took 0.00s
Save bytecode. took 0.03s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 973.763135195s
Resetting cache.
Bootstrap to the start of init.init took 992.34s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.03s
Loading script took 0.22s
Loading save slot metadata. took 0.02s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Owner\\AppData\\Roaming/RenPy/backups\\fleetway Shadamy 1':
Dump and make backups. took 0.11s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.06s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.07s
Build styles took 0.01s
Load screen analysis took 0.00s
Analyze screens took 0.02s
Save screen analysis took 0.12s
Prepare screens took 0.17s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 993.592428207s
Resetting cache.
Bootstrap to the start of init.init took 1050.36s
Early init took 0.00s
Loader init took 0.07s
Loading error handling took 0.03s
Loading script took 0.18s
Loading save slot metadata. took 0.03s
Loading persistent took 0.00s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.08s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.01s
Index archives took 0.00s
Dump and make backups. took 0.10s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc. took 0.06s
DPI scale factor: 1.500000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.11s
Build styles took 0.01s
Load screen analysis took 0.08s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.08s
Save pyanalysis. took 0.00s
Save bytecode. took 0.02s
Running _start took 0.00s
Performance test:
Interface start took 0.07s
primary display bounds: (0, 0, 2160, 1440)

swap interval: 1 frames
Using GL DLL.
Windowed mode.
Vendor: 'Intel'
Renderer: 'Intel(R) HD Graphics 5000'
Version: '4.3.0 - Build 20.19.15.4568'
Display Info: None
Extensions:
    
    GL_3DFX_texture_compression_FXT1
    GL_AMD_vertex_shader_layer
    GL_AMD_vertex_shader_viewport_index
    GL_ARB_ES2_compatibility
    GL_ARB_ES3_compatibility
    GL_ARB_arrays_of_arrays
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_buffer_storage
    GL_ARB_cl_event
    GL_ARB_clear_buffer_object
    GL_ARB_clear_texture
    GL_ARB_clip_control
    GL_ARB_color_buffer_float
    GL_ARB_compatibility
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_compute_shader
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_copy_image
    GL_ARB_debug_output
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_indirect
    GL_ARB_draw_instanced
    GL_ARB_enhanced_layouts
    GL_ARB_explicit_attrib_location
    GL_ARB_explicit_uniform_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_layer_viewport
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_fragment_shader_interlock
    GL_ARB_framebuffer_no_attachments
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_gpu_shader5
    GL_ARB_gpu_shader_fp64
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_indirect_parameters
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_internalformat_query2
    GL_ARB_invalidate_subdata
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multi_bind
    GL_ARB_multi_draw_indirect
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_program_interface_query
    GL_ARB_provoking_vertex
    GL_ARB_query_buffer_object
    GL_ARB_robust_buffer_access_behavior
    GL_ARB_robustness
    GL_ARB_sample_shading
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_seamless_cubemap_per_texture
    GL_ARB_separate_shader_objects
    GL_ARB_shader_atomic_counters
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_image_load_store
    GL_ARB_shader_image_size
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_storage_buffer_object
    GL_ARB_shader_subroutine
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_stencil_texturing
    GL_ARB_sync
    GL_ARB_tessellation_shader
    GL_ARB_texture_barrier
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_buffer_range
    GL_ARB_texture_compression
    GL_ARB_texture_compression_bptc
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_cube_map_array
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_gather
    GL_ARB_texture_mirror_clamp_to_edge
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_query_levels
    GL_ARB_texture_query_lod
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_stencil8
    GL_ARB_texture_storage
    GL_ARB_texture_storage_multisample
    GL_ARB_texture_swizzle
    GL_ARB_texture_view
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_attrib_64bit
    GL_ARB_vertex_attrib_binding
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_10f_11f_11f_rev
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_separate_stencil
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_clip_volume_hint
    GL_EXT_compiled_vertex_array
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_polygon_offset_clamp
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shader_integer_mix
    GL_EXT_shadow_funcs
    GL_EXT_stencil_two_side
    GL_EXT_stencil_wrap
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod_bias
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_IBM_texture_mirrored_repeat
    GL_INTEL_fragment_shader_ordering
    GL_INTEL_map_texture
    GL_INTEL_performance_query
    GL_KHR_blend_equation_advanced
    GL_KHR_debug
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
vertex renpy.alpha, renpy.geometry, renpy.texture ------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.alpha, renpy.geometry, renpy.texture ----------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_alpha;
uniform float u_renpy_over;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    
        gl_FragColor = gl_FragColor * vec4(u_renpy_alpha, u_renpy_alpha, u_renpy_alpha, u_renpy_alpha * u_renpy_over);
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.solid ---------------------------------------------
#version 120
attribute vec4 a_position;
uniform mat4 u_transform;

void main() {

        gl_Position = u_transform * a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.solid -------------------------------------------
#version 120
uniform vec4 u_renpy_solid_color;

void main() {

        gl_FragColor = u_renpy_solid_color;
    }

--------------------------------------------------------------------------------
vertex renpy.geometry, renpy.texture -------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.geometry, renpy.texture -----------------------------------------
#version 120
uniform float u_lod_bias;
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, u_lod_bias);
    }

--------------------------------------------------------------------------------
vertex renpy.ftl ---------------------------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
varying vec2 v_tex_coord;

void main() {

        v_tex_coord = a_tex_coord;
        gl_Position = a_position;
    }

--------------------------------------------------------------------------------
fragment renpy.ftl -------------------------------------------------------------
#version 120
uniform sampler2D tex0;
varying vec2 v_tex_coord;

void main() {

        gl_FragColor = texture2D(tex0, v_tex_coord.xy, -1.0);
    }

--------------------------------------------------------------------------------
vertex renpy.dissolve, renpy.geometry ------------------------------------------
#version 120
attribute vec2 a_tex_coord;
attribute vec4 a_position;
uniform mat4 u_transform;
varying vec2 v_tex_coord;

void main() {

        gl_Position = u_transform * a_position;
    
        v_tex_coord = a_tex_coord;
    }

--------------------------------------------------------------------------------
fragment renpy.dissolve, renpy.geometry ----------------------------------------
#version 120
uniform float u_lod_bias;
uniform float u_renpy_dissolve;
uniform sampler2D tex0;
uniform sampler2D tex1;
varying vec2 v_tex_coord;

void main() {

        vec4 color0 = texture2D(tex0, v_tex_coord.st, u_lod_bias);
        vec4 color1 = texture2D(tex1, v_tex_coord.st, u_lod_bias);

        gl_FragColor = mix(color0, color1, u_renpy_dissolve);
    }

--------------------------------------------------------------------------------
Screen sizes: virtual=(1920, 1080) physical=(2058, 1158) drawable=(2058, 1158)
Maximum texture size: 4096x4096
Total time until interface ready: 1051.49639702s
